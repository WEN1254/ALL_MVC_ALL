@model ALL_MVC_ALL.Models.OrderModel.Ship
@{
    //取得當前購物車所有內容
    var currentCart = ALL_MVC_ALL.Models.Carts.Operation.GetCurrentCart();
}

@*<h3>結帳</h3>*@


<div class="ordercontent">
    <div class="col-12">

        <table class="table table-striped">
            <thead class="thead-light">
                <tr>
                    <th class="pic" scope="col">圖片</th>
                    <th scope="col">品名</th>
                    <th scope="col">單價</th>
                    <th scope="col">數量</th>
                    <th scope="col">總計</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var cartitem in currentCart)
                {
                    <tr>
                        <th class="pic" scope="row">
                            <img src="@cartitem.Image" alt="">
                        </th>
                        <td>@cartitem.Name</td>
                        <td>$@cartitem.Price 元</td>
                        <td>@cartitem.Quantity</td>
                        <td>$@cartitem.Amount 元</td>
                    </tr>
                }
                <tr>
                    <th scope="row">總價錢</th>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>@String.Format("共{0}元 ", currentCart.TotalAmount)</td>
                </tr>

            </tbody>
        </table>

    </div>
    <div class="col-12" id="order_change">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <div class="omantitle">
                    <h4>收貨人資訊</h4>
                    <hr />
                </div>
                <div class="omanform">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RecieverName, htmlAttributes: new { @class = "control-label col-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RecieverName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RecieverName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.RecieverPhone, htmlAttributes: new { @class = "control-label col-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RecieverPhone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RecieverPhone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.RecieverAddress, htmlAttributes: new { @class = "control-label col-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.RecieverAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RecieverAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-10">
                        <label>選擇付款方式</label>
                        <br />
                        <button type="button" class="buybtn btn btn-outline-success" id="local" onclick="orderChange()">貨到付款</button>

                        <!-- Button trigger modal -->
                        <button type="button" class="buybtn btn btn-outline-success" data-toggle="modal" data-target="#exampleModal" onclick="orderChange2()" id="local2">
                            信用卡
                        </button>
                        <button type="button" class="buybtn btn btn-outline-success" onclick="orderChange3()" id="local3">
                            Line_Pay
                        </button>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="確定購買" class="btn btn-default btn-outline-dark" />
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">信用卡資訊</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="order_modal-body">
                <form class="col-12">
                    <img src="https://www.klkidbooks.com.tw/upload_files/commodity-detail-02.jpg" alt="">
                    <div class="form-group">
                        <label for="exampleInputEmail1">Email address</label>
                        <input type="email" class="form-control" id="exampleInputEmail1" placeholder="Email">
                    </div>
                    <div class="form-group card-number-group">
                        <label for="card-number" class="control-label"><span id="cardtype"></span>卡號</label>
                        <div class="form-control card-number"></div>
                    </div>
                    <div class="form-group expiration-date-group">
                        <label for="expiration-date" class="control-label">卡片到期日</label>
                        <div class="form-control expiration-date" id="tappay-expiration-date"></div>
                    </div>
                    <div class="form-group cvc-group">
                        <label for="cvc" class="control-label">卡片後三碼</label>
                        <div class="form-control cvc"></div>
                    </div>

                    <button type="submit" onclick="onClick()" class="btn btn-default">Pay</button>
                </form>
            </div>

        </div>
    </div>
</div>

@section endJS{
    <script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous"></script>
    <script src="https://js.tappaysdk.com/tpdirect/v5.1.0"></script>

    <script crossorigin="anonymous">
        TPDirect.setupSDK(17001, 'app_AQ0CulDzAUU3cO6XBTvuY2sibtQZUUIrozZ2SP5JsGMkASeVj5og3WfF95kl', 'sandbox')
        TPDirect.card.setup({
            fields: {
                number: {
                    element: '.form-control.card-number',
                    placeholder: '**** **** **** ****'
                },
                expirationDate: {
                    element: document.getElementById('tappay-expiration-date'),
                    placeholder: 'MM / YY'
                },
                ccv: {
                    element: $('.form-control.cvc')[0],
                    placeholder: '後三碼'
                }
            },
            styles: {
                'input': {
                    'color': 'gray'
                },
                'input.ccv': {
                    // 'font-size': '16px'
                },
                ':focus': {
                    'color': 'black'
                },
                '.valid': {
                    'color': 'green'
                },
                '.invalid': {
                    'color': 'red'
                }

            }
        })
        // listen for TapPay Field
        TPDirect.card.onUpdate(function (update) {
            /* Disable / enable submit button depend on update.canGetPrime  */
            /* ============================================================ */

            // update.canGetPrime === true
            //     --> you can call TPDirect.card.getPrime()
            // const submitButton = document.querySelector('button[type="submit"]')
            if (update.canGetPrime) {
                // submitButton.removeAttribute('disabled')
                $('button[onclick="onClick()"]').removeAttr('disabled')
            } else {
                // submitButton.setAttribute('disabled', true)
                $('button[onclick="onClick()"]').attr('disabled', true)
            }


            /* Change card type display when card type change */
            /* ============================================== */

            // cardTypes = ['visa', 'mastercard', ...]
            var newType = update.cardType === 'unknown' ? '' : update.cardType
            $('#cardtype').text(newType)



            /* Change form-group style when tappay field status change */
            /* ======================================================= */

            // number 欄位是錯誤的
            if (update.status.number === 2) {
                setNumberFormGroupToError('.card-number-group')
            } else if (update.status.number === 0) {
                setNumberFormGroupToSuccess('.card-number-group')
            } else {
                setNumberFormGroupToNormal('.card-number-group')
            }

            if (update.status.expiry === 2) {
                setNumberFormGroupToError('.expiration-date-group')
            } else if (update.status.expiry === 0) {
                setNumberFormGroupToSuccess('.expiration-date-group')
            } else {
                setNumberFormGroupToNormal('.expiration-date-group')
            }

            if (update.status.cvc === 2) {
                setNumberFormGroupToError('.cvc-group')
            } else if (update.status.cvc === 0) {
                setNumberFormGroupToSuccess('.cvc-group')
            } else {
                setNumberFormGroupToNormal('.cvc-group')
            }
        })
        function onClick() {
            event.preventDefault()

            // fix keyboard issue in iOS device
            forceBlurIos()

            const tappayStatus = TPDirect.card.getTappayFieldsStatus()
            console.log(tappayStatus)

            // Check TPDirect.card.getTappayFieldsStatus().canGetPrime before TPDirect.card.getPrime
            if (tappayStatus.canGetPrime === false) {
                alert('can not get prime')
                return
            }

            // Get prime
            TPDirect.card.getPrime(function (result) {
                if (result.status !== 0) {
                    alert('get prime error ' + result.msg)
                    return
                }
                alert('get prime 成功，prime: ' + result.card.prime)

                var settings = {
                    "url": "https://sandbox.tappaysdk.com/tpc/payment/pay-by-prime",
                    "method": "POST",
                    "timeout": 0,
                    "headers": {
                        "content-type": "application/json",
                        "x-api-key": "partner_PtIw8fJEjXZLj9CE3tzl8dbwIidETEVODzmyBDTUDr51HyNRV2If4SDI"
                    },
                    "data": JSON.stringify({
                        "partner_key": "partner_PtIw8fJEjXZLj9CE3tzl8dbwIidETEVODzmyBDTUDr51HyNRV2If4SDI",
                        "prime": result.card.prime,
                        "amount": "100",
                        "merchant_id": "aa88658865_CTBC",
                        "details": "Some item",
                        "cardholder":
                        {
                            "phone_number": "+886923456789",
                            "name": "王小明",
                            "email": "LittleMing@Wang.com",
                            "zip_code": "100",
                            "address": "台北市天龍區芝麻街1號1樓",
                            "national_id": "A123456789"
                        }
                    }),
                };

                $.ajax(settings).done(function (response) {
                    console.log(response);
                });
            })
        }

        function setNumberFormGroupToError(selector) {
            $(selector).addClass('has-error')
            $(selector).removeClass('has-success')
        }

        function setNumberFormGroupToSuccess(selector) {
            $(selector).removeClass('has-error')
            $(selector).addClass('has-success')
        }

        function setNumberFormGroupToNormal(selector) {
            $(selector).removeClass('has-error')
            $(selector).removeClass('has-success')
        }

        function forceBlurIos() {
            if (!isIos()) {
                return
            }
            var input = document.createElement('input')
            input.setAttribute('type', 'text')
            // Insert to active element to ensure scroll lands somewhere relevant
            document.activeElement.prepend(input)
            input.focus()
            input.parentNode.removeChild(input)
        }

        function isIos() {
            return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
        }

        var count = 0;

        function orderChange() {

            if (count % 2 == 0) {
                var PayLocal = document.getElementById("local");
                PayLocal.style.background = '#28a745';
                PayLocal.style.color = 'white';
                count++;
            }
            else {
                var PayLocal = document.getElementById("local");
                PayLocal.style.background = 'white';
                PayLocal.style.color = '#28a745';
                count++;

            }
        }
        function orderChange2() {

            if (count % 2 == 0) {
                var PayLocal2 = document.getElementById("local2");
                PayLocal2.style.background = '#28a745';
                PayLocal2.style.color = 'white';
                count++;
            }
            else {
                var PayLocal2 = document.getElementById("local2");
                PayLocal2.style.background = 'white';
                PayLocal2.style.color = '#28a745';
                count++;

            }
        }
        function orderChange3() {

            if (count % 2 == 0) {
                var PayLocal3 = document.getElementById("local3");
                PayLocal3.style.background = '#28a745';
                PayLocal3.style.color = 'white';
                count++;
            }
            else {
                var PayLocal3 = document.getElementById("local3");
                PayLocal3.style.background = 'white';
                PayLocal3.style.color = '#28a745';
                count++;

            }
        }

    </script>



}

@section topCSS{


    <style type="text/css">
        * {
            padding: 0;
            margin: 0;
            list-style: none;
        }

        .ordercontent {
            margin: 50px 50px;
        }

        .pic {
            width: 100px;
        }

            .pic img {
                width: 100%;
            }

        .jumbotron {
            text-align: center;
        }

        .text-left {
            text-align: left;
        }

        #order_change form {
            margin-bottom: 100px;
            border: 1px solid #dee2e6;
        }

        .container {
            max-width: 750px;
        }

        .form-horizontal .omantitle {
            background-color: #dee2e6;
            padding: 40px 40px 0;
        }

        .form-horizontal .omanform {
            background-color: #F2F2F2;
            padding: 40px 40px;
            margin-top: -20px;
        }
        /* F2F2F2*/
        .form-horizontal, .form-horizontal label {
            font-weight: 700;
            font-size: 22px;
        }

            .form-horizontal h4 {
                font-weight: 700;
                font-size: 24px;
            }

        .buybtn {
            font-weight: 700;
            width: 200px;
            margin: 0 20px 20px;
        }

        .modal-dialog form {
            padding: 40px;
            box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);
        }

        .tappay-field-focus {
            border-color: #66afe9;
            outline: 0;
            -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 8px rgba(102, 175, 233, .6);
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 8px rgba(102, 175, 233, .6);
        }

        .has-error .tappay-field-focus {
            border-color: #843534;
            -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #ce8483;
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #ce8483;
        }

        .has-success .tappay-field-focus {
            border-color: #2b542c;
            -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #67b168;
            box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #67b168;
        }

        #pay_card {
            width: 90px;
        }
    </style>
}



